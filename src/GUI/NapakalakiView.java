/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import napakalakijava.CombatResult;
import napakalakijava.Napakalaki;

/**
 *
 * @author jumacasni
 */
public class NapakalakiView extends javax.swing.JFrame {
    
    private Napakalaki napakalakiModel;
    
    public void setNapakalaki(Napakalaki n){
        napakalakiModel = n;
        currentPlayer.setNapakalaki(n);
        currentPlayer.setPlayer(napakalakiModel.getCurrentPlayer());
        currentMonster.setMonster(napakalakiModel.getCurrentMonster());
        currentMonster.setVisible(false);
        currentPlayer.getStealTreasure().setEnabled(false);
        currentPlayer.getDiscardAllTreasures().setEnabled(false);
        currentPlayer.getDiscardTreasures().setEnabled(false);
        combat.setEnabled(false);
        nextTurn.setEnabled(false);
        
        repaint();
        revalidate();
    }
    
    public NapakalakiView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentMonster = new GUI.MonsterView();
        narrator = new javax.swing.JTextField();
        meetMonster = new javax.swing.JButton();
        combat = new javax.swing.JButton();
        nextTurn = new javax.swing.JButton();
        currentPlayer = new GUI.PlayerView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        currentMonster.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        meetMonster.setText("Meet the monster");
        meetMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetMonsterActionPerformed(evt);
            }
        });

        combat.setText("Combat!");
        combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatActionPerformed(evt);
            }
        });

        nextTurn.setText("Next turn");
        nextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(490, 490, 490)
                        .addComponent(narrator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(meetMonster, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addComponent(combat, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(nextTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(currentPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currentMonster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(narrator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(currentMonster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(currentPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(meetMonster, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combat, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(nextTurn))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meetMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetMonsterActionPerformed
        currentMonster.setMonster(napakalakiModel.getCurrentMonster());
        combat.setEnabled(true);
        currentMonster.setVisible(true);
        meetMonster.setEnabled(false);
        currentPlayer.getMakeVisible().setEnabled(false);
    }//GEN-LAST:event_meetMonsterActionPerformed

    private void combatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatActionPerformed
        CombatResult resultado = napakalakiModel.developCombat();
        
        nextTurn.setEnabled(true);
        
        if(resultado == CombatResult.LOSE)
            narrator.setText("Has perdido el combate...");
        
        else if(resultado == CombatResult.LOSEANDCONVERT)
            narrator.setText("Has perdido el combate... pero te conviertes en sectario");
            
        else if(resultado == CombatResult.WIN)
            narrator.setText("¡Has ganado el combate!");
                 
        else
            narrator.setText("¡ENHORABUENA! Has ganado la partida.");
        
        currentPlayer.setPlayer(napakalakiModel.getCurrentPlayer());
        combat.setEnabled(false);
        meetMonster.setEnabled(false);
        currentPlayer.getMakeVisible().setEnabled(true);
        currentPlayer.getStealTreasure().setEnabled(currentPlayer.getPlayer().canISteal());
        currentPlayer.getDiscardTreasures().setEnabled(true);
        currentPlayer.getDiscardAllTreasures().setEnabled(true);
    }//GEN-LAST:event_combatActionPerformed

    private void nextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnActionPerformed
        if(!napakalakiModel.nextTurn())
            narrator.setText("No puedes pasar turno, tienes que cumplir tu mal rollo o tienes mas de 4 tesoros ocultos");
        
        else{
            currentPlayer.setPlayer(napakalakiModel.getCurrentPlayer());
            combat.setEnabled(false);
            meetMonster.setEnabled(true);
            nextTurn.setEnabled(false);
            currentPlayer.getStealTreasure().setEnabled(false);
            currentPlayer.getDiscardAllTreasures().setEnabled(false);
            currentPlayer.getDiscardTreasures().setEnabled(false);
            currentPlayer.getMakeVisible().setEnabled(true);
            currentMonster.setVisible(false);
            narrator.setText("");
            currentPlayer.getPendingBadConsequenceView().getText().setText("");
        }
    }//GEN-LAST:event_nextTurnActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showView(){
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combat;
    private GUI.MonsterView currentMonster;
    private GUI.PlayerView currentPlayer;
    private javax.swing.JButton meetMonster;
    private javax.swing.JTextField narrator;
    private javax.swing.JButton nextTurn;
    // End of variables declaration//GEN-END:variables
}
